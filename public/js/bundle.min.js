!function e(n,o,i){function t(a,s){if(!o[a]){if(!n[a]){var c="function"==typeof require&&require;if(!s&&c)return c(a,!0);if(r)return r(a,!0);var d=new Error("Cannot find module '"+a+"'");throw d.code="MODULE_NOT_FOUND",d}var l=o[a]={exports:{}};n[a][0].call(l.exports,function(e){var o=n[a][1][e];return t(o||e)},l,l.exports,e,n,o,i)}return o[a].exports}for(var r="function"==typeof require&&require,a=0;a<i.length;a++)t(i[a]);return t}({1:[function(e,n,o){"use strict";var i={isMobile:!1,hasTouch:!1},t=e("./selectors"),r=t.MAIN_NAV,a=(t.BANNER,t.LOGO_WRAP,t.TROWEL_ICON);var s=e("./utils"),c=s.fixBanner,d=(s.expandNav,s.shrinkNav),l=s.callToActionHeightFix,u=s.setBgImgHeight;function h(){$(window).scrollTop()>2*$("header").height()?$("header").addClass("remove"):$("header").removeClass("remove")}function f(){var e=window.innerWidth;i.isMobile=e<=414,i.hasTouch&&u(),e<1060&&$("header").css("z-index",""),e>=737?l():$(".action").css("height",""),c()}function g(){$(a).on("click",function(e){e.preventDefault(),function(e){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:1200,o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:0;$("body, html").animate({scrollTop:$(e).offset().top-o},n)}("#overview")})}function v(){$(".burger-btn").on("click",function(e){e.preventDefault(),$(".burger-btn, .burger-icon, "+r).toggleClass("open")}),g()}function p(){"/"!==location.pathname&&($("header,  main, .banner").addClass("pages"),$(".banner").addClass("fixed"),d()),f(),$(window).resize(f),$(window).scroll(function(e){h(),"/"===location.pathname&&c()}),$(window).on("touchstart",function(e){i.hasTouch=!0,u(),$(window).off("touchstart")})}function w(){"/"===location.pathname&&c(),h(),i.hasTouch&&u(),setTimeout(function(){$(".loading-page, .loading-page svg").addClass("fade-out"),setTimeout(function(){$("body").removeClass("no-scroll"),window.innerWidth>=737&&l()},700),setTimeout(function(){$(".loading-page").remove()},2e3)},500)}$(function(){p(),v(),w()})},{"./selectors":2,"./utils":3}],2:[function(e,n,o){"use strict";n.exports={MAIN_NAV:".main-nav",BANNER:".banner",LOGO_WRAP:".logo-wrap",TROWEL_ICON:".icon-trowel-outline"}},{}],3:[function(e,n,o){"use strict";var i=e("./selectors"),t=i.MAIN_NAV,r=i.BANNER,a=i.LOGO_WRAP,s=(i.TROWEL_ICON,function(){$(t).add(r).add(a).addClass("shrink")}),c=function(){$(t).add(r).add(a).removeClass("shrink")};n.exports={shrinkNav:s,expandNav:c,fixBanner:function(){var e=$(window).scrollTop(),n=void 0;$(t).offset().top-e<=20&&($(t).addClass("fixed"),(n=$("header").height()-$(window).scrollTop())>=178&&$(t).removeClass("fixed"));var o=window.innerWidth>=1060;(n=$("header").height()-$(window).scrollTop())<=125?(n<=30?$(r).addClass("fixed"):$(r).removeClass("fixed"),n<=0?(o&&$("header").css("z-index",2),s()):o&&$("header").css("z-index","")):(o&&$("header").css("z-index",""),$(r).removeClass("fixed"),c())},callToActionHeightFix:function(){$(".overview .lg-img").each(function(e,n){var o=$(n).find("img").height();$(n).siblings(".action").height(o)})},setBgImgHeight:function(){var e=$("header");e.css("height",""),e.height(e.css("height"))}}},{"./selectors":2}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
